.page {
	background: get-color( "gray" ) url("../images/rptree-bg.jpg") no-repeat center;
	background-size: cover;
	color: get-color( "white" );
}

.experience-selector {
	align-items: center;
	display: flex;
	flex-wrap: wrap;
	justify-contents: space-between;
	margin: 0 auto;
	max-width: rem(1200px);
	position: relative;
	width: 100%;

	@include breakpoint( orientation landscape ) {
		flex-wrap: nowrap;
		justify-content: space-around;
	}

	&__logo {
		height: 70vh;
		margin: 10vh auto 0;
		position: relative;

		@include breakpoint( orientation landscape ) {
			height: 80vh;
			margin: 0;
		}

		img {
			display: block;
			height: 100%;
			margin: 0 auto;
			position: relative;
		}

		@include breakpoint( orientation landscape ) {
			height: 80vh;
			padding-top: 10vh;
			width: auto;
		}

		&::after {
			background-color: transparentize( mix( white, get-color( "black" ), 20% ), 0.9 );
			border-radius: 50%;
			bottom: -3rem;
			content: "";
			display: block;
			filter: blur( 5px );
			height: 2rem;
			left: 50%;
			position: absolute;
			transform: translate( -50%, 0 );
			width: 80%;
		}

		.snowflake {
			position: absolute;

			height: 16px;
			width: 16px;

			// @media ( min-width: 640px ) and ( min-aspect-ratio: 1/1 ) {
			// 	height: 32px;
			// 	width: 32px;
			// }

			svg {
				display: block;
				height: 100%;
				width: 100%;
			}

			$containerWidth: 568px;
			$containerHeight: 663px;

			$snowflake-positioning: (
				"left" 30px "bottom" 241px,
				"left" 65px "top" 236px,
				"left" 130px "top" 58px,
				"right" 187px "top" 25px,
				"right" 131px "top" 166px,
				"right" 35px "bottom" 184px
			);

			@for $i from 1 through 6 {

				$horizontalDirection: nth( nth( $snowflake-positioning, $i ), 1 );
				$horizontalValue:     floor( percentage( nth( nth( $snowflake-positioning, $i ), 2 ) / $containerWidth ) );

				$verticalDirection:   nth( nth( $snowflake-positioning, $i ), 3 );
				$verticalValue:       floor( percentage( nth( nth( $snowflake-positioning, $i ), 4 ) / $containerHeight ) );

				&.snowflake--#{$i} {
					#{$horizontalDirection}: $horizontalValue;
					#{$verticalDirection}: $verticalValue;

					@include breakpoint( orientation landscape ) {

						@if $verticalDirection == "bottom" {

							#{$verticalDirection}: calc( #{$verticalValue} - 10vh );

						} @else {

							#{$verticalDirection}: calc( #{$verticalValue} + 10vh );
						}
					}
				}
			}
		}
	}

	&__desktop,
	&__vr {
		color: get-color( "white" );
		text-transform: uppercase;
		width: 50%;
		@include aspect-ratio(1, 1);

		@include breakpoint( orientation landscape ) {
			max-width: 128px;
			width: 15%;

			&::after {
				display: none;
			}
		}

		.experience-selector--desktop,
		.experience-selector--vr {
			align-items: center;
			display: block;
			font-size: 14px;
			font-weight: 700;
			height: 50%;
			letter-spacing: 1px;
			line-height: 1.1;
			text-align: center;
			white-space: nowrap;
			width: 50%;
			position: absolute;
			left: 50%;
			top: 50%;
			transform: translate( -50%, -50% );

			@include breakpoint( orientation landscape ) {
				width: 100%;
				height: 100%;
			}

			a {
				color: get-color( "white" );
				height: 50%;
				width: 50%;

				.experience-selector__svg {
					align-items: center;
					background-color: transparentize( get-color( "white" ), 0.9 );
					border: 4px solid get-color( "blue--brand" );
					border-radius: 50%;
					display: flex;
					height: 100%;
					justify-content: center;
					margin-bottom: 1em;
					transition: background-color 100ms ease-in;
					width: 100%;
				}

				svg {
					width: 75%;
				}

				@include hover-state {
					text-decoration: none;

					.experience-selector__svg {
						background-color: transparentize( get-color( "white" ), 0.3 );
					}
				}
			}
		}
	}

	@media (orientation: landscape) {
		&__desktop {
			order: -1;
		}
	}

	&__text {
		background-color: $gray-lightest; // bootstrap color variable
		border: 1px solid $gray-light; // bootstrap color variable
		font-size: 0.8em;
		padding: 3px;
		text-transform: uppercase;
		white-space: nowrap;
	}
}
